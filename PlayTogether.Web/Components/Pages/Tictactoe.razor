@page "/tictactoe"
@using PlayTogether.Web.Services
@inject GameService GameService

<h3>Tic-Tac-Toe Game</h3>

@if (!string.IsNullOrEmpty(GameService.WinnerMessage))
{
    <div class="winner-text">@GameService.WinnerMessage</div>
}

<button class="restart-button" @onclick="GameService.ResetGame">RESTART GAME</button>
<button class="restart-button" @onclick="GameService.ResetScore">RESET SCORE</button>

<div class="scoreboard" style="margin: 10px 0;">
    <strong>@GameService.PlayerXName</strong>: @GameService.ScoreX / <strong>@GameService.PlayerOName</strong>: @GameService.ScoreO
</div>

<div class="spiel-flaeche">
    @for (int row = 0; row < 3; row++)
    {
        int fixedRow = row;
        <div class="bord-reihe">
            @for (int col = 0; col < 3; col++)
            {
                int fixedCol = col;
                <button class="zelle" @onclick="() => GameService.MakeMove(fixedRow, fixedCol)">
                    @GameService.Board[fixedRow, fixedCol]
                </button>
            }
        </div>
    }
</div>

<div style="margin-top: 15px;">
    <input placeholder="Player X Name" @bind="playerXInput" />
    <input placeholder="Player O Name" @bind="playerOInput" style="margin-left: 10px;" />
    <button class="restart-button" @onclick="SetPlayerNames" style="margin-left: 10px;">Set Player Names</button>
</div>

<div class="spectator-section" style="margin-top: 20px;">
    <input placeholder="Enter spectator name" @bind="spectatorInput" />
    <button class="restart-button" @onclick="SetSpectator" style="margin-left: 10px;">Set Spectator</button>
    <button class="restart-button" @onclick="ClearSpectator" style="margin-left: 10px;">Clear Spectator</button>
</div>

@if (!string.IsNullOrEmpty(GameService.SpectatorName))
{
    <div class="spectator-info" style="margin-top: 10px; font-weight: bold; color: darkorange;">
        Spectator: @GameService.SpectatorName is watching the game!
    </div>
}

@code {
    private string playerXInput = "";
    private string playerOInput = "";

    private string spectatorInput = "";


    private void SetPlayerNames()
    {
        if (!string.IsNullOrWhiteSpace(playerXInput))
            GameService.PlayerXName = playerXInput.Trim();

        if (!string.IsNullOrWhiteSpace(playerOInput))
            GameService.PlayerOName = playerOInput.Trim();

        GameService.ResetScore();
    }

    
    private void SetSpectator()
    {
        GameService.SetSpectatorName(spectatorInput);
        spectatorInput = "";
    }

   
    private void ClearSpectator()
    {
        GameService.ClearSpectator();
    }

    protected override void OnInitialized()
    {
        GameService.StateChanged += OnGameStateChanged;
    }

    private void OnGameStateChanged(object? sender, EventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        GameService.StateChanged -= OnGameStateChanged;
    }
}

@implements IDisposable

<style>
    .spiel-flaeche {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 10px;
    }

    .bord-reihe {
        display: flex;
        gap: 10px;
    }

    .zelle {
        width: 90px;
        height: 90px;
        font-size: 2rem;
        background-color: #f0f0f0;
        border: 2px solid #333;
        border-radius: 8px;
        cursor: pointer;
        display: flex;
        justify-content: center;
        align-items: center;
        font-weight: bold;
    }

    .winner-text {
        margin-top: 20px;
        font-size: 1.8rem;
        color: green;
        font-weight: bold;
        text-align: center;
    }

    .score-text {
        font-size: 1.2rem;
        margin-bottom: 15px;
        font-weight: bold;
    }

    .restart-button {
        margin: 15px auto;
        padding: 16px 32px;
        font-size: 1.4rem;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        display: block;
        max-width: 300px;
        text-align: center;
    }

    .restart-button:hover {
        background-color: #0056b3;
    }

    .name-inputs input {
        margin: 10px;
        padding: 10px;
        font-size: 1rem;
    }

    .spectator-section input {
        padding: 8px;
        margin-right: 8px;
        font-size: 1rem;
    }

    .spectator-section button {
        padding: 8px 16px;
        margin-right: 8px;
        font-size: 1rem;
    }
</style>